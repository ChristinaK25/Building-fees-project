package my.koinoxrista;

import my.koinoxrista.utils.SqliteConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class ApartmentDetailsForm extends javax.swing.JFrame {

    int _apartmentId = 0;
    int _buildingId = 0;
    ApartmentsListForm _parent = null;

    public ApartmentDetailsForm() {
        initComponents();
    }

    public ApartmentDetailsForm(int apartmentId, int buildingId, ApartmentsListForm parent) {
        initComponents();
        _apartmentId = apartmentId;
        _buildingId = buildingId;
        _parent = parent;

        Connection connection = SqliteConnection.getConnection();
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        int floor = 0;
        String code = "";
        String ownerName = "";
        int surface = 0;
        String ownerPhone = "";
        float perMille = 0;
        int type = 0;

        if (_apartmentId != 0) {
            String query = "select * from apartments where id = ?";
            try {
                pstmt = connection.prepareStatement(query);
                pstmt.setInt(1, _apartmentId);
                rs = pstmt.executeQuery();
                while (rs.next()) {
                    floor = rs.getInt("floor");
                    code = rs.getString("code");
                    ownerName = rs.getString("owner_name");
                    surface = rs.getInt("surface");
                    ownerPhone = rs.getString("owner_phone");
                    perMille = rs.getFloat("per_mille");
                    type = (rs.getString("type").equals("apartment") ? 0 : 1);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (rs != null) {
                        rs.close();
                    }
                    if (pstmt != null) {
                        pstmt.close();
                    }
                    if (connection != null) {
                        connection.close();
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }

        // Populate form with apartment data
        this.floorTextField.setText(floor + "");
        this.codeTextField.setText(code);
        this.ownerNameTextField.setText(ownerName);
        this.surfaceTextField.setText(surface + "");
        this.ownerPhoneTextField.setText(ownerPhone);
        this.perMilleTextField.setText(perMille + "");
        this.typeComboBox.setSelectedIndex(type);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        floorTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        codeTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ownerNameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        surfaceTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ownerPhoneTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        perMilleTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Διαχείριση Κοινοχρήστων - Επεξεργασία Διαμερίσματος");

        jLabel1.setText("Όροφος");

        jLabel2.setText("Κωδικός Διαμερίσματος");

        jLabel3.setText("Ονοματεπώνυμο Ιδιοκτήτη");

        jLabel4.setText("Τετραγωνικά Μέτρα");

        jLabel5.setText("Τηλέφωνο Ιδιοκτήτη");

        saveButton.setText("Αποθήκευση");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Άκυρο");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Χιλιοστά Διαμερίσματος");

        jLabel7.setText("Τύπος");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Διαμέρισμα", "Κατάστημα" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 347, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surfaceTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ownerNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(codeTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(floorTextField)
                            .addComponent(ownerPhoneTextField)
                            .addComponent(perMilleTextField)
                            .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(floorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ownerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surfaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ownerPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(perMilleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Connection connection = SqliteConnection.getConnection();
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        // Elegxos oti to athroisma olwn twn xiliostwn einai mikrotero i iso apo 1000
        float currentPerMille = Float.parseFloat(this.perMilleTextField.getText());
        String query = "select sum(per_mille) as sum from apartments where building_id = ? and id <> ?";
        float sum = 0;
        try {
            pstmt = connection.prepareStatement(query);
            pstmt.setInt(1, _buildingId);
            pstmt.setInt(2, _apartmentId);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                sum = rs.getFloat("sum");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (pstmt != null) {
                    pstmt.close();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

        if ((sum + currentPerMille) > 1000) {
            JOptionPane.showMessageDialog(this,
                    "Το άθροισμα των χιλιοστών όλων των διαμερισμάτων/καταστημάτων πρέπει να είναι μικρότερο ή ίσο του 1000. Παρακαλώ διορθώστε.",
                    "Σφάλμα",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            if (_apartmentId == 0) {
                // Create new building
                query = "insert into apartments (building_id, floor, code, owner_name, surface, owner_phone, per_mille, type) values (?, ?, ?, ?, ?, ?, ?, ?)";

                try {
                    pstmt = connection.prepareStatement(query);
                    pstmt.setInt(1, _buildingId);
                    pstmt.setString(2, this.floorTextField.getText());
                    pstmt.setString(3, this.codeTextField.getText());
                    pstmt.setString(4, this.ownerNameTextField.getText());
                    pstmt.setString(5, this.surfaceTextField.getText());
                    pstmt.setString(6, this.ownerPhoneTextField.getText());
                    pstmt.setString(7, this.perMilleTextField.getText());
                    pstmt.setString(8, (this.typeComboBox.getSelectedIndex() == 0 ? "apartment" : "store"));
                    pstmt.executeUpdate();
                } catch (Exception ex) {
                    ex.printStackTrace();
                } finally {
                    try {
                        if (pstmt != null) {
                            pstmt.close();
                        }
                        if (connection != null) {
                            connection.close();
                        }
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            } else {
                // Update new building
                query = "update apartments set floor = ?, code = ?, owner_name = ?, surface = ?, owner_phone = ?, per_mille = ?, type = ? where id = ?";

                try {
                    pstmt = connection.prepareStatement(query);
                    pstmt.setString(1, this.floorTextField.getText());
                    pstmt.setString(2, this.codeTextField.getText());
                    pstmt.setString(3, this.ownerNameTextField.getText());
                    pstmt.setString(4, this.surfaceTextField.getText());
                    pstmt.setString(5, this.ownerPhoneTextField.getText());
                    pstmt.setString(6, this.perMilleTextField.getText());
                    pstmt.setString(7, (this.typeComboBox.getSelectedIndex() == 0 ? "apartment" : "store"));
                    pstmt.setInt(8, _apartmentId);
                    pstmt.executeUpdate();
                } catch (Exception ex) {
                    ex.printStackTrace();
                } finally {
                    try {
                        if (pstmt != null) {
                            pstmt.close();
                        }
                        if (connection != null) {
                            connection.close();
                        }
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }

            _parent.updateApartmentsTable();
            this.setVisible(false);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApartmentDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApartmentDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApartmentDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApartmentDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ApartmentDetailsForm form = new ApartmentDetailsForm();
                form.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField codeTextField;
    private javax.swing.JTextField floorTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField ownerNameTextField;
    private javax.swing.JTextField ownerPhoneTextField;
    private javax.swing.JTextField perMilleTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField surfaceTextField;
    private javax.swing.JComboBox<String> typeComboBox;
    // End of variables declaration//GEN-END:variables
}
